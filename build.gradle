plugins {
    id 'java'
    id 'com.github.ben-manes.versions' version '0.38.0'
}
apply plugin: 'java'

defaultTasks 'clean', 'build'

description = 'JSON/XML/YAML Test'
group = 'ch.frostnova.test'
version = '1.0.0-SNAPSHOT'

repositories {
    jcenter()
}

sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11

def isNonStable = { String version ->
    def stableKeyword = ['RELEASE', 'FINAL', 'GA'].any { it -> version.toUpperCase().contains(it) }
    def regex = /^[0-9,.v-]+(-r)?$/
    return !stableKeyword && !(version ==~ regex)
}

dependencyUpdates {
    rejectVersionIf {
        isNonStable(it.candidate.version)
    }
}

ext {
    junitVersion = '4.13.2'
    assertjVersion = '3.19.0'
    mockitoVersion = '3.8.0'
    jacksonVersion = '2.12.3'
    slf4jVersion = '1.7.30'
    logbackVersion = '1.2.3'
    hoconJacksonVersion = '1.1.1'
    jsonSchemaValidatorVersion = '1.5.1'

    libs = [
            jackson    : [
                    "com.fasterxml.jackson.core:jackson-annotations:${jacksonVersion}",
                    "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}",
                    "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:${jacksonVersion}"
            ],
            xml        : "com.fasterxml.jackson.dataformat:jackson-dataformat-xml:${jacksonVersion}",
            yaml       : "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:${jacksonVersion}",
            cbor       : "com.fasterxml.jackson.dataformat:jackson-dataformat-cbor:${jacksonVersion}",
            csv        : "com.fasterxml.jackson.dataformat:jackson-dataformat-csv:${jacksonVersion}",
            properties : "com.fasterxml.jackson.dataformat:jackson-dataformat-properties:${jacksonVersion}",
            jsonSchema : "org.everit.json:org.everit.json.schema:${jsonSchemaValidatorVersion}",
            testbase   : [
                    "junit:junit:${junitVersion}",
                    "org.assertj:assertj-core:${assertjVersion}",
                    "org.mockito:mockito-core:${mockitoVersion}"
            ],
            loggingAPI : [
                    "org.slf4j:slf4j-api:${slf4jVersion}"
            ],
            loggingImpl: [
                    "org.slf4j:jcl-over-slf4j:${slf4jVersion}",
                    "org.slf4j:jul-to-slf4j:${slf4jVersion}",
                    "ch.qos.logback:logback-classic:${logbackVersion}"
            ]
    ]
}

dependencies {
    implementation libs.jackson
    implementation libs.xml
    implementation libs.yaml
    implementation libs.cbor
    implementation libs.properties
    implementation libs.csv
    implementation libs.jsonSchema
    implementation libs.loggingAPI
    implementation libs.loggingImpl

    testImplementation libs.testbase
}
