defaultTasks 'clean', 'build'

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.github.ben-manes:gradle-versions-plugin:0.28.0'
    }
}

apply plugin: 'java'
apply plugin: 'com.github.ben-manes.versions'

description = 'JSON/XML/YAML Test'
group = 'ch.frostnova.test'
version = '1.0.0-SNAPSHOT'

repositories {
    jcenter()
}

compileJava.options.encoding = 'UTF-8'
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

def dateTimeFormat = java.time.format.DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss")
def buildDate = java.time.LocalDateTime.now()

jar {
    manifest {
        attributes(
                "Name": project.name,
                "Version": project.version,
                "Build-Date": dateTimeFormat.format(buildDate)
        )
    }
}

def isNonStable = { String version ->
    def stableKeyword = ['RELEASE', 'FINAL', 'GA'].any { it -> version.toUpperCase().contains(it) }
    def regex = /^[0-9,.v-]+(-r)?$/
    return !stableKeyword && !(version ==~ regex)
}

dependencyUpdates {
    rejectVersionIf {
        isNonStable(it.candidate.version)
    }
}

ext {
    junitVersion = '4.13'
    mockitoVersion = '3.3.3'
    jacksonVersion = '2.11.0'
    slf4jVersion = '1.7.30'
    logbackVersion = '1.2.3'
    hoconJacksonVersion = '1.1.1'
    jsonSchemaValidatorVersion = '2.2.14'

    libs = [
            jackson    : [
                    "com.fasterxml.jackson.core:jackson-annotations:${jacksonVersion}",
                    "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}",
                    "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:${jacksonVersion}"
            ],
            xml        : "com.fasterxml.jackson.dataformat:jackson-dataformat-xml:${jacksonVersion}",
            yaml       : "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:${jacksonVersion}",
            cbor       : "com.fasterxml.jackson.dataformat:jackson-dataformat-cbor:${jacksonVersion}",
            hocon      : "org.honton.chas.hocon:jackson-dataformat-hocon:${hoconJacksonVersion}",
            csv        : "com.fasterxml.jackson.dataformat:jackson-dataformat-csv:${jacksonVersion}",
            jsonSchema : "com.github.java-json-tools:json-schema-validator:${jsonSchemaValidatorVersion}",
            testbase   : [
                    "junit:junit:${junitVersion}",
                    "org.mockito:mockito-core:${mockitoVersion}"
            ],
            loggingAPI : [
                    "org.slf4j:slf4j-api:${slf4jVersion}"
            ],
            loggingImpl: [
                    "org.slf4j:jcl-over-slf4j:${slf4jVersion}",
                    "org.slf4j:jul-to-slf4j:${slf4jVersion}",
                    "ch.qos.logback:logback-classic:${logbackVersion}"
            ]
    ]
}

dependencies {
    compile libs.jackson
    compile libs.xml
    compile libs.yaml
    compile libs.cbor
    compile libs.hocon
    compile libs.csv
    compile libs.jsonSchema
    compile libs.loggingAPI
    compile libs.loggingImpl

    testCompile libs.testbase
}
